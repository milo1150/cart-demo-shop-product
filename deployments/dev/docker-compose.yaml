services:
  postgres-shop-product: # service name must match the hostname in .env file.
    image: postgres:17.3
    container_name: postgres-shop-product
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - ${DATABASE_HOST_PORT}:${DATABASE_DOCKER_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cart-demo

  minio-shop-product:
    image: minio/minio:latest
    container_name: minio-shop-product
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_BROWSER_REDIRECT_URL}
    # ports:
    #   - '9000:9000' # MinIO API port
    #   - '9001:9001' # MinIO Web UI
    expose:
      - '9000' # MinIO API port
      - '9001' # MinIO Web UI
    volumes:
      - minio-data:/data
    healthcheck:
      test:
        [
          'CMD',
          'mc',
          'alias',
          'set',
          'local',
          'http://127.0.0.1:9000',
          '${MINIO_ROOT_USER}',
          '${MINIO_ROOT_PASSWORD}',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cart-demo

  minio-init:
    image: minio/mc
    depends_on:
      - minio-shop-product
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://${MINIO_ENDPOINT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      mc mb local/public-bucket;
      mc anonymous set public local/public-bucket;
      exit 0;
      "
    networks:
      - cart-demo

  app:
    # Disable custom container_name for horizontal scale
    # container_name: go-app-shop-product
    build:
      context: ../../
      dockerfile: deployments/dev/Dockerfile
    # No need ports, accept route from traefik only
    # ports:
    #   - 8083:1323
    expose:
      - 1323
    volumes:
      # Important to bind/mount codebase dir to /app dir for live reload
      - ../../:/app
    depends_on:
      postgres-shop-product:
        condition: service_healthy
    # labels are key-value metadata
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.shop-product-container.rule=PathPrefix(`/shop-product`)'
      # tells Traefik which port inside the container the service is listening on.
      - 'traefik.http.services.shop-product-container.loadbalancer.server.port=1323'
    networks:
      - cart-demo

volumes:
  postgres-data:
  minio-data:

networks:
  cart-demo:
    name: cart-demo
    driver: bridge
